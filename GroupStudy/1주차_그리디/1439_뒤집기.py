### [문제 분석]
# 목적 : 0과 1을 뒤집는 최소 횟수를 구한다.
# -> 그리디 알고리즘을 사용하여 문자열을 뒤집는 최소 횟수를 구해야한다.

### [문제 풀이]
# 1단계 : 문자열 s를 입력받고, 0을 1로바꾸는 cnt_0to1 변수와, cnt_1to0변수를 초기화한다.
# 2단계 : s(0001100)의 길이만큼 반복문을 실행한다.
#         0이 1로 바뀔때마다 cnt_0to1변수를 1씩 더하고, 1이 0으로 바뀔때마다 1to0변수를 1씩 더한다.
# 3단계 : 0to1과 1to0 중에 작은 수를 출력한다. (뒤집기 최소 횟수 출력) 

# 1단계
s = input()
cnt_0to1 = 0
cnt_1to0 = 0

# # 2단계
# for i in range(0, len(s)):
#     if(s[i] == 0):
#         cnt_0to1 += 1
#     else:
#         cnt_1to0 += 1
    
# # 2단계
# for i in range(0, len(s), 1):
#     if(s[i] != s[i+1]):
#         if(s[i] == 0):
#             cnt_0to1 += 1
#         else:
#             cnt_1to0 += 1
#     else:
#         pass
        
# 2단계
for i in range(0, len(s), 1):
    if (s[i] != s[i-1]):
        if(s[i] == '0'):
            cnt_0to1 += 1
        else:
            cnt_1to0 += 1
    else:
        pass
        
# 3단계
print(min(cnt_0to1, cnt_1to0))

# 주의할 점
# 1. 만약 한번에 하나씩 뒤집는게 아니라, 연속된 숫자는 한번에 뒤집을 수 있다!!
# 0001100이면 2번이 아니라 1번만에 11 두개를 뒤집을 수 있다는 것이다.
# 그렇다면, 두 수가 연속되는지 확인해 볼 필요가 있기 때문에, 중첩 조건문을 사용해야한다.

# 2. IndexError: string index out of range -> 인덱스 범위를 벗어났다. s+1이 아니라 s-1을 해야했다.