### [문제 분석]
# 목적 : 거스름돈의 최소 개수 구하기
# -> 디그리 알고리즘 사용.

### [문제 풀이]
# 1단계 : 가진돈(1000)에서 구매금액(380)을 빼고, 거슬러 줘야 할 금액(620)을 저장한다.
# 2단계 : 잔돈의 최소 개수를 세기위한 count를 초기화하고, 거스름돈 단위를 리스트에 저장한다.
# 3단계 : '거스름돈 단위의 개수'만큼 반복문을 실행한다.
#         620원에서 500원을 나눈 몫을 count하고, money는 500을 나눈 나머지로 저장한다.
# 4단계 : 거스름돈 최소 개수를 출력한다.

# 1단계
buy = int(input())
money = 1000 - buy

# 2단계
count = 0
data = [500, 100, 50, 10, 5, 1]

# 3단계
for i in data:
    count += money // i
    money = money % i

# 4단계
print(count)

# 주의할 점
# 이것은 가장 큰 500엔부터, 1엔까지 차례대로 거슬러 주는 그리디 알고리즘 문제이다.
# 가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 종합해 다른해가 나올 수 있다.
# 즉, 큰 단위가 작은 단위의 배수 형태이므로 항상 최적의 해를 보장할 수 있는것이다.
# 하지만 주의할 점은, 동전의 단위가 무작위로 주어진 문제는 '그리디 알고리즘'이 아닌 '다이나믹 프로그래밍'으로 해결해야한다.